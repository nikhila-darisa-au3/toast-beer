[{"/home/nikhila/Desktop/toast-beer/src/index.js":"1","/home/nikhila/Desktop/toast-beer/src/reportWebVitals.js":"2","/home/nikhila/Desktop/toast-beer/src/components/home.js":"3","/home/nikhila/Desktop/toast-beer/src/components/dashboard.js":"4","/home/nikhila/Desktop/toast-beer/src/components/beerdetails.js":"5","/home/nikhila/Desktop/toast-beer/src/store/store.js":"6","/home/nikhila/Desktop/toast-beer/src/reducers/getbeersReducer.js":"7","/home/nikhila/Desktop/toast-beer/src/actions/actiontype.js":"8","/home/nikhila/Desktop/toast-beer/src/data.js":"9","/home/nikhila/Desktop/toast-beer/src/components/dashboardviewtype.js":"10","/home/nikhila/Desktop/toast-beer/src/components/navbar.js":"11"},{"size":1056,"mtime":1608187217420,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608016782903,"results":"14","hashOfConfig":"13"},{"size":3413,"mtime":1608288507759,"results":"15","hashOfConfig":"13"},{"size":5776,"mtime":1608291070269,"results":"16","hashOfConfig":"13"},{"size":2669,"mtime":1608284528212,"results":"17","hashOfConfig":"13"},{"size":466,"mtime":1608189004354,"results":"18","hashOfConfig":"13"},{"size":1383,"mtime":1608287856094,"results":"19","hashOfConfig":"13"},{"size":177,"mtime":1608188261527,"results":"20","hashOfConfig":"13"},{"size":50,"mtime":1608173917899,"results":"21","hashOfConfig":"13"},{"size":1687,"mtime":1608290047491,"results":"22","hashOfConfig":"13"},{"size":526,"mtime":1608284711787,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18pgu84",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/nikhila/Desktop/toast-beer/src/index.js",[],["53","54"],"/home/nikhila/Desktop/toast-beer/src/reportWebVitals.js",[],"/home/nikhila/Desktop/toast-beer/src/components/home.js",["55","56"],"import React from 'react'\nimport Navbar from './navbar'\nimport '../styles/home.css'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { mapDispatchToProps, store } from '../store/store'\nimport { GET_BEER_DETAILS, LIKE_POST, ADD_COMMENT } from '../actions/actiontype'\nlet interval\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      beers: []\n    }\n  }\n  componentDidMount() {\n    if (window.location.pathname === '/') {\n      this.getData()\n      interval = setInterval(this.getData, 5000)\n      setInterval(() => {\n        this.setState({\n          beers: this.props.beers\n        })\n      }, 6000)\n    } else {\n      clearInterval(interval)\n    }\n  }\n  componentWillMount() {\n    clearInterval(interval)\n  }\n  getData() {\n    fetch('https://api.punkapi.com/v2/beers/random').then(data => data.json()).then(res => {\n      let data = res[0]\n      data.likes = 0\n      data.comments = []\n      data.color = \"\"\n      store.dispatch({\n        type: GET_BEER_DETAILS,\n        data: data\n      })\n\n    })\n  }\n  likePost = (id) => {\n    this.props.dispatch({\n      type: LIKE_POST,\n      id: id\n    })\n  }\n  addComment = (e, id) => {\n    if (e.keyCode === 13) {\n      if (e.target.value.length > 0) {\n        this.props.dispatch({\n          type: ADD_COMMENT,\n          data: e.target.value,\n          id: id\n        })\n        document.getElementById(\"comment\").value = ''\n      }\n    }\n  }\n  render() {\n    const { beers } = this.state\n    console.log(this.props.beers)\n    return (\n      <React.Fragment>\n        <Navbar />\n        {this.props.beers.length > 0 ?\n          <div>\n            {this.props.beers.map((data, index) => {\n              let color = data.color\n              return <div key={index} className=\"row mt-5\">\n                <div className=\"col-sm-3\">\n                </div>\n                <div className=\"col-sm-6 mt-2\" style={{ \"background\": \"white\", \"boxShadow\": \"2px 2px 2px 2px rgba(.2,.2,.2,.2)\" }}>\n                  <Link className=\"link\" to={`/beer/${data.id}`}>\n                    <h4 className=\"logo\">{data.name}</h4>\n                    <p>{data.description}</p>\n                    <img src={data.image_url} className=\"mb-5\" width='150' height='350' style={{ \"marginLeft\": \"34%\" }} />\n                  </Link>\n                  <hr />\n                  <div className=\"post-details\">\n                    <h6 onClick={() => this.likePost(data.id)} style={{ \"cursor\": \"pointer\", \"color\": color }}><i className=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i> {data.likes}  Likes</h6>\n                    <h6 onClick={() => { this.addComment(data.id) }}>{data.comments.length} Comments</h6>\n                  </div>\n                  <hr />\n                  <p> <b>comments</b> :</p>\n                  {data.comments.map((data, i) => {\n                    return <p className=\"comment-text\" key={i}>{data}</p>\n                  })}\n                  <input id=\"comment\"placeholder=\"Add Comment\" onKeyDown={(e) => this.addComment(e, data.id)} className=\"mb-4 comment-box\" />\n                </div>\n                <div className=\"col-sm-3\">\n                </div>\n              </div>\n            })}\n            <h6 style={{ \"textAlign\": \"center\" }}>Loading...</h6>\n          </div>\n          : \"Loading...\"\n        }\n      </React.Fragment>\n    )\n  }\n}\nexport default connect(mapDispatchToProps)(Home);\n","/home/nikhila/Desktop/toast-beer/src/components/dashboard.js",["57","58","59","60","61"],"import React from 'react'\nimport Navbar from './navbar'\nimport { GridView, ListView } from './dashboardviewtype'\nimport { connect } from 'react-redux'\nimport '../styles/home.css'\nimport { mapDispatchToProps } from '../store/store'\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: this.props.beers,\n            searchedValue: '',\n            isSearched: false,\n            searchStatus: \"\",\n            viewType: \"grid\",\n            filterItems: \"\"\n        }\n    }\n    componentDidMount() {\n        let filterItems = []\n        this.props.beers.map((data, i) => {\n            data.ingredients.malt.map((item, i) => {\n                filterItems.push(item.name)\n            })\n        })\n        let result = filterItems.filter(function (item, pos) {\n            return filterItems.indexOf(item) == pos;\n        })\n        this.setState({\n            filterItems: result\n        })\n    }\n    search = async (e) => {\n        if (e.key === 'Enter') {\n            let searchedValue = e.target.value\n            if (searchedValue.length <= 0) {\n\n            } else {\n                let result = this.props.beers.filter((data, i) => {\n                    let name = data.name.toLowerCase()\n                    let res = name.includes(searchedValue.toLowerCase())\n                    if (res) {\n                        return data\n                    }\n                })\n                if (result.length > 0) {\n                    this.setState({\n                        items: result,\n                        searchedValue: searchedValue,\n                        isSearched: true\n                    })\n                } else {\n                    this.setState({\n                        items: result,\n                        searchedValue: searchedValue,\n                        isSearched: true,\n                        searchStatus: \"Sorry not found\"\n                    })\n                }\n            }\n        }\n    }\n    changeView = (e) => {\n        let viewType = e.target.value\n        this.setState({\n            viewType: viewType\n        })\n    }\n    getLikedItems = (e) => {\n        let sortValue = parseInt(e.target.value)\n        console.log(typeof (sortValue))\n        let result = this.props.beers.filter((data, i) => {\n            console.log(data.likes)\n            if (data.likes === sortValue) {\n                return data\n            }\n        })\n        if (result.length > 0) {\n            this.setState({\n                items: result,\n                isSearched: true,\n                searchStatus: \"Items based on likes\"\n            })\n        } else {\n            this.setState({\n                items: [],\n                isSearched: true,\n                searchStatus: \"No Items were liked\"\n            })\n        }\n    }\n    submitData = (e) => {\n        e.preventDefault();\n        console.log(e)\n    }\n\n    render() {\n        let { items, isSearched, searchedValue, searchStatus, viewType, filterItems } = this.state\n        return (\n            <React.Fragment>\n                <Navbar />\n                <div className=\"header mt-4 mb-4\">\n                    <input type=\"text\" className=\"search input-border\" placeholder='search' onKeyDown={this.search} />\n                    <select className=\"ml-2 input-border search\" name=\"likes\" onChange={this.getLikedItems}>\n                        <option>Sort by likes</option>\n                        <option value=\"1\">liked beers</option>\n                        <option value=\"0\">Non-liked beers</option>\n                    </select>\n                    <select className=\"ml-2 input-border search\" name=\"viewType\" onChange={this.changeView}>\n                        <option>View Type</option>\n                        <option value=\"grid\">Grid View</option>\n                        <option value=\"list\">List View</option>\n                    </select>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            {isSearched ? <h6 className=\"mb-3\">Search Results for - <b>{searchedValue}</b> - {searchStatus}</h6> : null}\n                            {viewType === \"grid\" ?\n                                <GridView items={items} />\n                                :\n                                <ListView items={items} />\n                            }\n\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <div>\n                                <h6 className=\"ml-2\">Filter By</h6>\n                                {filterItems.length > 0 ?\n                                    <div style={{ \"justifyContent\": \"flex-end\" }}>\n                                        <form onSubmit={(e)=>this.submitData(e)}>\n\n                                            {filterItems.map((data, i) => {\n                                                return <div key={i}>\n                                                    <input type=\"checkbox\" name={data} value={data} />\n                                                    <label>{data}</label>\n\n                                                </div>\n                                            })}\n                                            <button className=\"btn btn-primary\" type=\"submit\">Save</button>\n                                        </form>\n                                    </div>\n                                    : null\n                                }\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default connect(mapDispatchToProps)(DashBoard)\n","/home/nikhila/Desktop/toast-beer/src/components/beerdetails.js",["62"],"import React from 'react'\nimport Navbar from './navbar'\nimport { connect } from 'react-redux'\nimport { GET_BEER_CONTENT } from '../actions/actiontype'\nimport { mapDispatchToProps } from '../store/store'\nclass BeerDetails extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            beerData: ''\n        }\n    }\n    componentDidMount() {\n        let id = this.props.match.params.id\n        console.log(id)\n        this.props.dispatch({\n            type: GET_BEER_CONTENT,\n            id: Number(id)\n        })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar />\n                <div className=\"container\">\n                    {this.props.beerContent.length > 0 ?\n                        this.props.beerContent.map((data, index) => {\n                            return <div key={index}>\n                                <h3>{data.name}</h3>\n                                <p>{data.description}</p>\n                                <img src={data.image_url} className=\"mb-5\" width='400' height='400' />\n                                <footer>\n                                    <p>{data.tagline}</p>\n                                </footer>\n                                <p><b>Ingrediants: </b></p>\n                                <p><b>Malt</b> - </p>\n                                {data.ingredients.malt.map((content, i) => {\n                                    return <div key={i}>\n                                        <p>{content.name} - {content.amount.value} {content.amount.unit} </p>\n                                    </div>\n                                })}\n                                <p><b>hops</b> - </p>\n                                {data.ingredients.hops.map((content, i) => {\n                                    return <div key={i}>\n                                        <p>{content.name} - {content.amount.value} {content.amount.unit} </p>\n                                    </div>\n                                })}\n                                <p><b>Brewers Tips: </b>{data.brewers_tips}</p>\n                                <p><b>Food Pairing: </b></p>\n                                <ul>\n                                    {data.food_pairing.map((content, i) => {\n                                        return <li>{content}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        })\n                        : \"Loading...\"}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\nexport default connect(mapDispatchToProps)(BeerDetails)","/home/nikhila/Desktop/toast-beer/src/store/store.js",["63"],"import {createStore,combineReducers} from 'redux'\nimport getbeersReducer from '../reducers/getbeersReducer'\n// let reducer = combineReducers({\n//     getbeersReducer:getbeersReducer\n// })\n// let store = createStore(getbeersReducer)\nlet store =createStore(getbeersReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nstore.subscribe(()=>{\n\n})\n\nfunction mapDispatchToProps(state){\n    return state\n\n}\nexport {store,mapDispatchToProps}","/home/nikhila/Desktop/toast-beer/src/reducers/getbeersReducer.js",["64","65","66"],"import data from '../data'\nfunction getbeersReducer(state = { beers: [], beerContent: \"\" }, action) {\n    if (action.type === \"GET_BEER_DETAILS\") {\n        // let newData = state\n        state.beers.push(action.data)\n        // state.beers = newData\n        return state\n    }\n    if (action.type === \"LIKE_POST\") {\n        // let beerData = state.beers.filter(data => data.id === action.id)\n        // beerData.map((data) => {\n        //     return data.color = \"blue\"\n        // })\n        // state.beers = beerData\n        state.beers.filter((data) => {\n            if (data.id === action.id) {\n              if(data.color===\"blue\"){\n                data.color=\"\"\n                data.likes = data.likes-1\n              }else{\n                data.color=\"blue\"\n                data.likes = data.likes+1\n              }\n            }\n            // return data\n        })\n        return state\n    }\n    if(action.type === 'ADD_COMMENT'){\n        state.beers.filter((data) => {\n            if (data.id === action.id) {\n             data.comments.push(action.data)\n            }\n        })\n        return state\n    }\n    if (action.type === 'GET_BEER_CONTENT') {\n        let beerData = state.beers.filter(data => data.id === action.id)\n        console.log(state)\n        state.beerContent = beerData\n        return { ...state }\n    }\n    return state\n}\nexport default getbeersReducer","/home/nikhila/Desktop/toast-beer/src/actions/actiontype.js",[],"/home/nikhila/Desktop/toast-beer/src/data.js",[],["67","68"],"/home/nikhila/Desktop/toast-beer/src/components/dashboardviewtype.js",[],"/home/nikhila/Desktop/toast-beer/src/components/navbar.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":64,"column":13,"nodeType":"75","messageId":"76","endLine":64,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":80,"column":21,"nodeType":"79","endLine":80,"endColumn":123},{"ruleId":"80","severity":1,"message":"81","line":21,"column":40,"nodeType":"82","messageId":"83","endLine":21,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":22,"column":49,"nodeType":"82","messageId":"83","endLine":22,"endColumn":51},{"ruleId":"84","severity":1,"message":"85","line":27,"column":46,"nodeType":"86","messageId":"87","endLine":27,"endColumn":48},{"ruleId":"80","severity":1,"message":"88","line":39,"column":64,"nodeType":"82","messageId":"89","endLine":39,"endColumn":66},{"ruleId":"80","severity":1,"message":"88","line":72,"column":56,"nodeType":"82","messageId":"89","endLine":72,"endColumn":58},{"ruleId":"77","severity":1,"message":"78","line":31,"column":33,"nodeType":"79","endLine":31,"endColumn":103},{"ruleId":"73","severity":1,"message":"90","line":1,"column":21,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"91","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"92","line":15,"column":35,"nodeType":"82","messageId":"83","endLine":15,"endColumn":37},{"ruleId":"80","severity":1,"message":"92","line":30,"column":35,"nodeType":"82","messageId":"83","endLine":30,"endColumn":37},{"ruleId":"69","replacedBy":"93"},{"ruleId":"71","replacedBy":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'beers' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'combineReducers' is defined but never used.","'data' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.",["95"],["96"],"no-global-assign","no-unsafe-negation"]